{"pages":[{"title":"Welcome","text":"Welcome to my personal website! I use this blog to track my progress on coding. It should be noted that some solutions were not my original idea.","link":"/about/index.html"}],"posts":[{"title":"Adaboost decision tree algorithms","text":"This is brief introduction of Adaboosting algorithms after I finished the machine learning course in coursera. IntroductionA foundation question in machine learning is: can a set of weak classifiers be combined to create a strong classifier? The answer is yes. Adaboost was the first really successful boosting algorithm developed for binary classification. More importantly, it is so mathematically beautiful and easy to implement that it would definitely be the starting point to learn boosting. In this document, we investigate this algorithm by boosting a set of decision tree algorithms. AnalysisLet’s consider the implementation of Adaboosting ensemble on decision tree model. Given a set of classifiers $${f_1,f_2,\\cdot, f_k}$$, where $f_i=\\pm 1$ for $i=1,\\cdots, k$ we want to find an appropriate linear combination of these classifiers $$F_k=\\text{sign}\\sum_{i=1}^kw_i f_i$$ such that $F_T$ is better that any $f_t$ . How to find these weights: $w_1,\\cdots,w_k$ ? Or even more basically, how to choose these classifiers ${f_1,f_2,\\cdot, f_k}$? Step 1.To begin with, we choose the first classifier $f_1$ to be the usual decision tree model.","link":"/2018/05/14/2018-05-15-Adaboost-decision-tree-algorithms/"},{"title":"Stochastic gradient decent and gradient decent","text":"IntroductionThis analysis explores the relation between the gradient decent and stochastic gradient decent. Starting from the basic gradient decent method, we shall see that SGD actually decrease this energy on “average”. Gradient decent: a math approachLet’s introduce the convex function first. A function $f:\\mathbb{R}^n\\rightarrow\\mathbb{R}$ is convex if and only if for all $x,y$ $\\in \\mathbb{R}^n$ and $\\lambda\\in (0,1)$, we have f(\\lambda x+(1-\\lambda)y)\\leq \\lambda f(x)+(1-\\lambda)f(y). A more mathematical definition is A function is said to be convex if and only if it’s second derivative is always non-negative. A simple example is the parabola equation $x^2$, and as you could see from the graph, this function has a unique minimum. The reason that we restricted our attention on the convex function is because its minimum could be easily calculated. In theory, to get the minimum/maximum of a function, we could simply set the derivative of it to zero and solve the equation(s). However, there are two potential issues here. There may be no closed form for the solutions especially when we have a complicated model. Even there is a explicit formula for the extreme points, the time complexity is $O(n^3)$ , which is another thing we need worry about if we have a super big data set. The gradient decent in machine learning is to find the minimum/maximum of a convex function without calculating the inverse matrix of the derivative. There are many discussions about this context online, here I just take a few lines to talk about the basic idea from the point view of mathematics. Given a convex function ^[The solution may not be converge to the global minimum without convexity.] $f:\\mathbb{R}^n\\rightarrow\\mathbb{R}$, we consider the following ordinary differential equation: \\begin{equation}\\label{eqn:grad}\\frac{dx}{dt}=-\\nabla f,\\quad x\\in \\mathbb{R}^n\\end{equation}.We then look at the change of $f$ along the solution to (\\ref{eqn:grad}), and it turn out that $f$ is monotonicity decreasing along the solution, in fact, the chain rule implies \\begin{equation}\\label{eqn:mono}\\frac{df}{dt}=\\frac{df}{dx}\\cdot \\frac{dx}{dt}=-||\\nabla f||^2.\\end{equation}Therefore, ideally, $f$ should decreases and decreases until it attains a constant. Then the right hand side of (\\ref{eqn:mono}) implies that this constant must be the global minimum. (\\ref{eqn:mono}) also implies that $f$ decreases fastest if we move $x$ in the direction of its negative gradient. The word “fastest” here could be interpreted as “most efficient” somehow, and it basically comes from the fact that the product of two vectors $a,b$ maximize/minimize if and only if $a,b$ are parallel to each other. Another thing should be note here is that there are many other directions that make $f$ decreases, they are just not as efficient as $\\nabla f$ does. This is the foundation of SGD! Gradient descent in regressionRegression is not as mysterious as its name suggest. Mathematically, it’s just an algorithm to solve an optimization problem. Let’s consider the simple case: linear regression. The cost/loss function is defined to be sum square error: \\begin{equation}\\label{eqn:linear}f(w)=||x\\cdot w-y||^2\\end{equation}where $x\\in M^{N\\times n}$ is the feature matrix, $w\\in M^{n\\times 1}$ is the weight vector, and $y\\in M^{N\\times 1}$ is the true value. We want to find a best $w$ that minimize $f$ based on the known observations $(x,y)$. In other words, we just need find the minimum of $f$ . To do this, we simply discretize (\\ref{eqn:mono}) as follows: \\frac{f_{n+1}-f_n}{h}=-||\\nabla f||_n^2,the above expression can be rewritten as a standard iteration form: \\begin{equation}\\label{alg:linear}f_{n+1}=f_n-h\\cdot||\\nabla f||_n^2,\\end{equation}where $h$ is the time step, and $\\nabla f$ can be easily obtained in most regression models, for instance, \\nabla f=-2x^T\\cdot(x\\cdot w-y) where $T$ is representing the transpose. Now if we ignore the numerical instabilities (usually caused by a big step-size $h$), (\\ref{eqn:mono}) implies that $f$ would monotonicity decreasing under (\\ref{alg:linear})! Stochastic descent gradient (SGD)Like gradient descent, SGD is another numerical algorithm to find the minimum/maximum. TBD.","link":"/2018/05/15/2018-05-16-Stochastic-gradient-decent-and-gradient-decent/"},{"title":"Monotonicity of K-means","text":"DescriptionGiven a set $S={x_1,\\cdots,x_n}$ , we aim to (1) partition the $n$ observations into $k(k\\leq n)$ subsets $\\{s_1,\\cdots,s_k\\}$, (2) minimize within-cluster sum of squares. Formally, the objective is to find:$$\\begin{equation}\\label{eqn:obj}\\underset{s}{\\text{argmin}} \\sum_{i=1}^k\\sum_{x\\in s_i} ||x-c_i||^2\\end{equation}$$ where $c_i$ is the mean (center of mass) of points in the subset $s_i$. Now in order to achieve this goal, the K-means algorithm reads as follows, first, we randomly pick $k$ points $\\\\{c_1,\\cdots,c_k\\\\}$ which are called centroids and label those points in $S$ that closer to $c_i$ than any other centroids by $c_i$. Mathematically, we just performed a Voronoi partition on $S$ for the lattice $\\\\{c_1,\\cdots,c_k\\\\}$. Next, we want to keep doing this Voronoi partition by updating our lattice so that \\ref{eqn:obj} is monotonously decreasing. There are two steps here: Update the centroid $c_i$ of each cluster by its center of mass, i.e.,$$\\begin{equation}\\label{eqn: centroid}c_i=\\frac{1}{|s_i|}\\sum_{x\\in s_i} x;\\end{equation}$$ Update the cluster labels by doing Voronoi partition on the new centroids set $\\{c_i,\\cdots,c_k \\}$. MonotonicityThe monotonicity of K-means algorithm essentially follows from the basic fact that any function attains the extreme points at the points where its derivative is vanishing. In fact, we consider the following energy:$$\\begin{equation}\\label{eqn:energy}f(c_1,\\cdots,c_k)=\\sum_{i=1}^k\\sum_{x\\in s_i} ||x-c_i||^2.\\end{equation}$$The gradient of $f$ with respect to $c_i$ is$$\\begin{equation}\\label{eqn:grad}\\frac{\\partial f}{\\partial c_i}=-2\\sum_{x\\in s_i}(x-c_i),\\quad i=1,\\cdots k.\\end{equation}$$By pushing (\\ref{eqn:grad}) $=0$ , it’s clear that$$c_i=\\frac{1}{|s_i|}\\sum_{x\\in s_i} x,$$which is exactly the centroid we chose in the above updating step. This also implies that K-means is actually a gradient descent algorithm. Unlike the gradient descent we have seen in many other context, here, we have a closed and simple form for the gradient. So we don’t have to implement the algorithm to obtain the gradient but simply use this elegant math formulation (\\ref{eqn: centroid}).","link":"/2018/05/18/2018-05-19-Monotonicity-of-K-means/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/03/20/hello-world/"},{"title":"Using Null","text":"Using Nullhttps://sqlzoo.net/wiki/Using_NullTeachers and DepartmentsThe school includes many departments. Most teachers work exclusively for a single department. Some teachers have no department. id dept name phone mobile 101 1 Shrivell 2753 07986 555 1234 102 1 Throd 2754 07122 555 1920 103 1 Splint 2293 104 Spiregrain 3287 105 2 Cutflower 3212 07996 555 6574 106 Deadyawn 3345 … id name 1 Computing 2 Design 3 Engineering … 1). List the teachers who have NULL for their department. 12SELECT teacher.name FROM teacherWHERE dept IS NULL 2). Note the INNER JOIN misses the teachers with no department and the departments with no teacher. 123SELECT teacher.name, dept.name FROM teacher INNER JOIN dept ON (teacher.dept=dept.id) 3). Use a different JOIN so that all teachers are listed. 123SELECT teacher.name, dept.name FROM teacherLEFT JOIN dept ONteacher.dept=dept.id 4). Use a different JOIN so that all departments are listed. 123SELECT teacher.name, dept.name FROM teacherRIGHT JOIN dept ONteacher.dept=dept.id 5). Use COALESCE to print the mobile number. Use the number ‘07986 444 2266’ if there is no number given.Show teacher name and mobile number or ‘07986 444 2266’ 1SELECT name, COALESCE(mobile, &apos;07986 444 2266&apos;) FROM teacher 6). Use the COALESCE function and a LEFT JOIN to print the teacher name and department name. Use the string ‘None’ where there is no department. 123SELECT teacher.name, COALESCE(dept.name,&apos;None&apos;) FROM teacherLEFT JOIN dept ONteacher.dept=dept.id 7). Use COUNT to show the number of teachers and the number of mobile phones. 1SELECT COUNT(name), COUNT(mobile) FROM teacher 8). Use COUNT and GROUP BY dept.name to show each department and the number of staff. Use a RIGHT JOIN to ensure that the Engineering department is listed. 123SELECT dept.name, COUNT(teacher.name) FROM teacherRIGHT JOIN dept ON teacher.dept = dept.idGROUP BY dept.name 9). Use CASE to show the name of each teacher followed by ‘Sci’ if the teacher is in dept 1 or 2 and ‘Art’ otherwise. 12345SELECT name, CASE WHEN dept in (1,2) THEN &apos;Sci&apos; ELSE &apos;Art&apos;ENDFROM teacher 10). Use CASE to show the name of each teacher followed by ‘Sci’ if the teacher is in dept 1 or 2, show ‘Art’ if the teacher’s dept is 3 and ‘None’ otherwise. 123456SELECT name, CASE WHEN dept in (1,2) THEN &apos;Sci&apos; WHEN dept=3 THEN &apos;Art&apos; ELSE &apos;None&apos;ENDFROM teacher","link":"/2018/08/22/2018-08-23-Using-Null/"},{"title":"SELECT basic","text":"SELECT basicshttps://sqlzoo.net/wiki/SELECT_basics name continent area population gdp Afghanistan Asia 652230 25500100 20343000000 Albania Europe 28748 2831741 12960000000 Algeria Africa 2381741 37100000 188681000000 Andorra Europe 468 78115 3712000000 Angola Africa 1246700 20609294 100990000000 …. 1). The example uses a WHERE clause to show the population of &apos;France&apos;. Note that strings (pieces of text that are data) should be in &apos;single quotes&apos;; Modify it to show the population of Germany 12SELECT population FROM world WHERE name = &apos;Germany&apos; 2). Checking a list The word IN allows us to check if an item is in a list. The example shows the name and population for the countries ‘Brazil’, ‘Russia’, ‘India’ and ‘China’. Show the name and the population for ‘Sweden’, ‘Norway’ and ‘Denmark’. 12SELECT name, population FROM world WHERE name IN ( &apos;Sweden&apos;, &apos;Norway&apos; , &apos;Denmark&apos;); 3). Which countries are not too small and not too big? BETWEEN allows range checking (range specified is inclusive of boundary values). The example below shows countries with an area of 250,000-300,000 sq. km. Modify it to show the country and the area for countries with an area between 200,000 and 250,000. 12SELECT name, area FROM world WHERE area BETWEEN 200000 AND 250000","link":"/2018/08/15/2018-08-16-SELECT-basic/"},{"title":"SELF JOIN","text":"Edinburgh Buseshttps://sqlzoo.net/wiki/Self_joinThis database consists of two tables: stops and routes stopsThis is a list of areas served by buses. The detail does not really include each actual bus stop - just areas within Edinburgh and whole towns near Edinburgh. Field Type Notes id INTEGER Arbitrary value name CHAR(30) The name of an area served by at least one bus routeA route is the path through town taken by a bus. Field Type Notes num CHAR(5) The number of the bus - as it appears on the front of the vehicle. Oddly these numbers often include letters company CHAR(3) Several bus companies operate in Edinburgh. The main one is Lothian Region Transport - LRT pos INTEGER This indicates the order of the stop within the route. Some routes may revisit a stop. Most buses go in both directions. stop INTEGER This references the stops table As different companies use numbers arbitrarily the num and the company are both required to identify a route. 1). How many stops are in the database. 1select count(id) from stops 2). Find the id value for the stop ‘Craiglockhart’ /TOO EASY 3). Give the id and the name for the stops on the ‘4’ ‘LRT’ service. 123select id, name from stopsjoin route on id=stopwhere num=4 and company=&apos;LRT&apos; 4). The query shown gives the number of routes that visit either London Road (149) or Craiglockhart (53). Run the query and notice the two services that link these stops have a count of 2. Add a HAVING clause to restrict the output to these two routes. 1234SELECT company, num, COUNT(*)FROM route WHERE stop=149 OR stop=53GROUP BY company, numhaving count(*)=2 5). Execute the self join shown and observe that b.stop gives all the places you can get to from Craiglockhart, without changing routes. Change the query so that it shows the services from Craiglockhart to London Road. 123456SELECT a.company, a.num, a.stop, b.stopFROM route a JOIN route b ON (a.company=b.company AND a.num=b.num)join stops stopa on stopa.id=a.stopjoin stops stopb on stopb.id=b.stopwhere stopa.name=&apos;Craiglockhart&apos; and stopb.name=&apos;London Road&apos; 6). The query shown is similar to the previous one, however by joining two copies of the stops table we can refer to stops by name rather than by number. Change the query so that the services between ‘Craiglockhart’ and ‘London Road’ are shown. If you are tired of these places try ‘Fairmilehead’ against ‘Tollcross’ 123456SELECT a.company, a.num, stopa.name, stopb.nameFROM route a JOIN route b ON (a.company=b.company AND a.num=b.num) JOIN stops stopa ON (a.stop=stopa.id) JOIN stops stopb ON (b.stop=stopb.id)WHERE stopa.name=&apos;Craiglockhart&apos; and stopb.name=&apos;London Road&apos; 7). Give a list of all the services which connect stops 115 and 137 (‘Haymarket’ and ‘Leith’) 12select distinct a. company,a. num from route a, route bwhere a.company=b.company and a.num=b.num and a.stop=115 and b.stop=137 8). Give a list of the services which connect the stops ‘Craiglockhart’ and ‘Tollcross’ 1234select a.company, a.num from route a, route bwhere a.company=b.company and a.num=b.num and a.stop =(select id from stops where name= &apos;Craiglockhart&apos; ) and b.stop=(select id from stops where name= &apos;Tollcross&apos; ) 9). Give a distinct list of the stops which may be reached from ‘Craiglockhart’ by taking one bus, including ‘Craiglockhart’ itself, offered by the LRT company. Include the company and bus no. of the relevant services. 1234select name, a.company, a.num from route a, route bjoin stops on stop=idwhere a.company = &apos;LRT&apos; and b.company = &apos;LRT&apos; and a.num=b.num and a.stop=(select id from stops where name= &apos;Craiglockhart&apos; ) 10). Find the routes involving two buses that can go from Craiglockhart to Sighthill. Show the bus no. and company for the first bus, the name of the stop for the transfer, and the bus no. and company for the second bus. Hint: Self-join twice to find buses that visit Craiglockhart and Sighthill, then join those on matching stops. 12345678910select distinct c.num, c.company, c.name, d.num, d.company from(select name, a.company, a.num from route a, route bjoin stops on stop=idwhere a.company = b.company and a.num=b.num and a.stop=(select id from stops where name= &apos;Craiglockhart&apos;) ) cjoin (select name, a.company, a.num from route a, route bjoin stops on stop=idwhere a.company = b.company and a.num=b.num and a.stop=(select id from stops where name= &apos;Sighthill&apos;) ) d onc.name=d.name","link":"/2018/08/15/2018-08-16-SELF-JOIN/"},{"title":"SELECT names","text":"SELECT nameshttps://sqlzoo.net/wiki/SELECT_namesPattern Matching StringsThis tutorial uses the LIKE operator to check names. We will be using the SELECT command on the table world: name continent Afghanistan Asia Albania Europe Algeria Africa Andorra Europe Angola Africa …. 1). You can use WHERE name LIKE &apos;B%&apos; to find the countries that start with “B”. The % is a wild-card it can match any characters Find the country that start with Y 12SELECT name FROM world WHERE name LIKE &apos;Y%&apos; 2). Find the countries that end with y 12SELECT name FROM world WHERE name LIKE &apos;%y&apos; 3). Luxembourg has an x - so does one other country. List them both. Find the countries that contain the letter x 12SELECT name FROM world WHERE name LIKE &apos;%x%&apos; 4). Iceland, Switzerland end with land - but are there others? Find the countries that end with land 12SELECT name FROM world WHERE name LIKE &apos;%land&apos; 5). Columbia starts with a C and ends with ia - there are two more like this. Find the countries that start with C and end with ia 12SELECT name FROM world WHERE name LIKE &apos;C%ia&apos; 6). Greece has a double e - who has a double o? Find the country that has oo in the name 12SELECT name FROM world WHERE name LIKE &apos;%oo%&apos; 7). Bahamas has three a - who else? Find the countries that have three or more a in the name 12SELECT name FROM world WHERE name LIKE &apos;%a%a%a%&apos; 8). India and Angola have an n as the second character. You can use the underscore as a single character wildcard. 123SELECT name FROM world WHERE name LIKE &apos;_n%&apos;ORDER BY name Find the countries that have “t” as the second character. 123SELECT name FROM world WHERE name LIKE &apos;_t%&apos;ORDER BY name 9). Lesotho and Moldova both have two o characters separated by two other characters. Find the countries that have two “o” characters separated by two others. 12SELECT name FROM world WHERE name LIKE &apos;%o__o%&apos; 10). Cuba and Togo have four characters names. Find the countries that have exactly four characters. 12SELECT name FROM world WHERE name LIKE &apos;____&apos; Harder QuestionsWell done for getting this far. The next questions are optional and only for students who are finding the basic questions too easy. 11). The capital of Luxembourg is Luxembourg. Show all the countries where the capital is the same as the name of the country. Find the country where the name is the capital city. 123SELECT name FROM world WHERE name = capital 12). The capital of Mexico is Mexico City. Show all the countries where the capital has the country together with the word “City”. Find the country where the capital is the country plus “City”. The concat function The function concat is short for concatenate - you can use it to combine two or more strings. 123SELECT name FROM world WHERE capital=concat(name,&apos; City&apos;) 13). Find the capital and the name where the capital includes the name of the country. 12select capital, name from worldwhere capital like concat(&apos;%&apos;,name,&apos;%&apos;) 14). Find the capital and the name where the capital is an extension of name of the country. You should include Mexico City as it is longer than Mexico. You should not include Luxembourg as the capital is the same as the country. 12select capital, name from worldwhere capital like concat(name,&apos;_%&apos;) 15). For Monaco-Ville the name is Monaco and the extension is -Ville. Show the name and the extension where the capital is an extension of name of the country. You can use the SQL function REPLACE. REPLACE(f, s1, s2) returns the string f with all occurances of s1 replaced with s2. 1REPLACE(&apos;vessel&apos;,&apos;e&apos;,&apos;a&apos;) -&gt; &apos;vassal&apos;12select name, replace(capital, name ,&apos;&apos;) as ext from worldwhere capital like concat(name,&apos;_%&apos;)","link":"/2018/08/15/2018-08-16-SELECT-names/"},{"title":"SELECT from Nobel","text":"SELECT from Nobelhttps://sqlzoo.net/wiki/SELECT_from_Nobel_Tutorialnobel Nobel LaureatesWe continue practicing simple SQL queries on a single table. This tutorial is concerned with a table of Nobel prize winners: 1nobel(yr, subject, winner) Using the SELECT statement. 1). Change the query shown so that it displays Nobel prizes for 1950. 123SELECT yr, subject, winner FROM nobel WHERE yr = 1950 2). Show who won the 1962 prize for Literature. 1234SELECT winner FROM nobel WHERE yr = 1962 AND subject = &apos;Literature&apos; 3). Show the year and subject that won ‘Albert Einstein’ his prize. 12SELECT yr, subject FROM nobelWHERE winner = &apos;Albert Einstein&apos; 4). Give the name of the ‘Peace’ winners since the year 2000, including 2000. 12SELECT winner FROM nobelWHERE subject = &apos;Peace&apos; AND yr &gt;= 2000 5). Show all details (yr, subject, winner) of the Literature prize winners for 1980 to 1989 inclusive. 123SELECT * FROM nobelWHERE yr BETWEEN 1980 AND 1989 AND subject = &apos;Literature&apos; 6). Show all details of the presidential winners: Theodore Roosevelt Woodrow Wilson Jimmy Carter Barack Obama 12345SELECT * FROM nobel WHERE winner IN (&apos;Theodore Roosevelt&apos;, &apos;Woodrow Wilson&apos;, &apos;Jimmy Carter&apos;, &apos;Barack Obama&apos;) 7). Show the winners with first name John 12SELECT winner FROM nobelWHERE winner LIKE &apos;John%&apos; 8). Show the year, subject, and name of Physics winners for 1980 together with the Chemistry winners for 1984. 1234SELECT * FROM nobelWHERE (subject = &apos;Physics&apos; AND yr = 1980)or(subject = &apos;Chemistry&apos; AND yr = 1984) 9). Show the year, subject, and name of winners for 1980 excluding Chemistry and Medicine 12SELECT * FROM nobelWHERE yr = 1980 AND subject NOT IN (&apos;Chemistry&apos;, &apos;Medicine&apos;) 10). Show year, subject, and name of people who won a ‘Medicine’ prize in an early year (before 1910, not including 1910) together with winners of a ‘Literature’ prize in a later year (after 2004, including 2004) 123SELECT yr, subject, winner FROM nobelWHERE (subject = &apos;Medicine&apos; AND yr &lt; 1910) OR (subject = &apos;Literature&apos; AND yr &gt;= 2004) 11). Find all details of the prize won by PETER GRÜNBERG Non-ASCII characters The u in his name has an umlaut. You may find this link useful https://en.wikipedia.org/wiki/%C3%9C#Keyboarding 12). Find all details of the prize won by EUGENE O’NEILL Escaping single quotes You can’t put a single quote in a quote string directly. You can use two single quotes within a quoted string. 12SELECT * FROM nobelWHERE winner = &apos;EUGENE O&apos;&apos;NEILL&apos; 13). Knights in order List the winners, year and subject where the winner starts with Sir. Show the the most recent first, then by name order. 123SELECT winner, yr, subject FROM nobelWHERE winner LIKE &apos;Sir%&apos;ORDER BY yr DESC, winner 14). The expression subject IN (‘Chemistry’,’Physics’) can be used as a value - it will be 0 or 1. Show the 1984 winners and subject ordered by subject and winner name; but list Chemistry and Physics last. 1234SELECT winner, subject FROM nobel WHERE yr=1984 ORDER BY subject IN (&apos;Physics&apos;,&apos;Chemistry&apos;), subject, winner","link":"/2018/08/16/2018-08-17-SELECT-from-Nobel/"},{"title":"SELECT within SELECT","text":"SELECT within SELECThttps://sqlzoo.net/wiki/SELECT_within_SELECT_TutorialThis tutorial looks at how we can use SELECT statements within SELECT statements to perform more complex queries. name continent area population gdp Afghanistan Asia 652230 25500100 20343000000 Albania Europe 28748 2831741 12960000000 Algeria Africa 2381741 37100000 188681000000 Andorra Europe 468 78115 3712000000 Angola Africa 1246700 20609294 100990000000 … 1). List each country name where the population is larger than that of ‘Russia’. 1world(name, continent, area, population, gdp) 1234SELECT name FROM world WHERE population &gt; (SELECT population FROM world WHERE name=&apos;Russia&apos;) 2). Show the countries in Europe with a per capita GDP greater than ‘United Kingdom’. 123SELECT name FROM worldWHERE gdp/population&gt;(SELECT gdp/population FROM world WHERE name = &apos;United Kingdom&apos;) AND continent = &apos;Europe&apos; 3). List the name and continent of countries in the continents containing either Argentina or Australia. Order by name of the country. 1234SELECT name, continent FROM worldWHERE continent IN (SELECT continent FROM world WHERE name IN (&apos;Argentina&apos;,&apos;Australia&apos;))ORDER BY name 4). Which country has a population that is more than Canada but less than Poland? Show the name and the population. 12345SELECT name, population FROM worldWHERE population &gt;(SELECT population FROM world WHERE name = &apos;Canada&apos;)AND population &lt;(SELECT population FROM world WHERE name = &apos;Poland&apos;) 5). Germany (population 80 million) has the largest population of the countries in Europe. Austria (population 8.5 million) has 11% of the population of Germany. Show the name and the population of each country in Europe. Show the population as a percentage of the population of Germany. Decimal places You can use the function ROUND to remove the decimal places. Percent symbol % You can use the function CONCAT to add the percentage symbol. 1234SELECT name, CONCAT(round(100*population/(SELECT population FROM world WHERE name = &apos;Germany&apos;)),&apos;%&apos;)FROM worldWHERE continent = &apos;Europe&apos; To gain an absurdly detailed view of one insignificant feature of the language, read on. We can use the word ALL to allow &gt;= or &gt; or &lt; or &lt;=to act over a list. For example, you can find the largest country in the world, by population with this query: 12345SELECT name FROM world WHERE population &gt;= ALL(SELECT population FROM world WHERE population&gt;0) You need the condition population&gt;0 in the sub-query as some countries have null for population. 6). Which countries have a GDP greater than every country in Europe? [Give the name only.] (Some countries may have NULL gdp values) 12345SELECT name FROM world WHERE gdp &gt; ALL(SELECT gdp FROM world WHERE gdp&gt;0 and continent=&apos;Europe&apos;) We can refer to values in the outer SELECT within the inner SELECT. We can name the tables so that we can tell the difference between the inner and outer versions. 7). Find the largest country (by area) in each continent, show the continent, the name and the area: 12345SELECT continent, name, area FROM world x WHERE area &gt;= ALL (SELECT area FROM world y WHERE y.continent = x.continent AND area&gt;0) 8). List each continent and the name of the country that comes first alphabetically. 12345SELECT continent, name FROM world xWHERE name = (SELECT name FROM world y WHERE x.continent = y.continent ORDER BY name LIMIT 1) 9). Find the continents where all countries have a population &lt;= 25000000. Then find the names of the countries associated with these continents. Show name, continent and population. 12345SELECT name, continent, population FROM world xWHERE x.continent in (SELECT continent FROM world y GROUP BY continentHAVING MAX(y.population) &lt;= 25000000) 10). Some countries have populations more than three times that of any of their neighbours (in the same continent). Give the countries and continents. 12345SELECT name, continent FROM world xWHERE population &gt; ALL(SELECT 3*population FROM world yWHERE x.continent = y.continent AND x.name != y.name)","link":"/2018/08/16/2018-08-17-SELECT-within-SELECT/"},{"title":"JOIN","text":"JOINhttps://sqlzoo.net/wiki/The_JOIN_operationJOIN and UEFA EURO 2012This tutorial introduces JOIN which allows you to use data from two or more tables. The tables contain all matches and goals from UEFA EURO 2012 Football Championship in Poland and Ukraine. The data is available (mysql format) at http://sqlzoo.net/euro2012.sql Summary id mdate stadium team1 team2 1001 8 June 2012 National Stadium, Warsaw POL GRE 1002 8 June 2012 Stadion Miejski (Wroclaw) RUS CZE 1003 12 June 2012 Stadion Miejski (Wroclaw) GRE CZE 1004 12 June 2012 National Stadium, Warsaw POL RUS … matchid teamid player gtime 1001 POL Robert Lewandowski 17 1001 GRE Dimitris Salpingidis 51 1002 RUS Alan Dzagoev 15 1002 RUS Roman Pavlyuchenko 82 … id teamname coach POL Poland Franciszek Smuda RUS Russia Dick Advocaat CZE Czech Republic Michal Bilek GRE Greece Fernando Santos … 1). The first example shows the goal scored by a player with the last name ‘Bender’. The * says to list all the columns in the table - a shorter way of saying matchid, teamid, player, gtime Modify it to show the matchid and player name for all goals scored by Germany. To identify German players, check for: teamid = &apos;GER&apos; 12SELECT matchid, player FROM goal WHERE teamid = &apos;GER&apos; 2). From the previous query you can see that Lars Bender’s scored a goal in game 1012. Now we want to know what teams were playing in that match. Notice in the that the column matchid in the goal table corresponds to the id column in the game table. We can look up information about game 1012 by finding that row in the game table. Show id, stadium, team1, team2 for just game 1012 12SELECT id, stadium, team1, team2 FROM game where id=1012 3). You can combine the two steps into a single query with a JOIN. 12SELECT * FROM game JOIN goal ON (id=matchid) The FROM clause says to merge data from the goal table with that from the game table. The ON says how to figure out which rows in game go with which rows in goal - the id from goal must match matchid from game. (If we wanted to be more clear/specific we could sayON (game.id=goal.matchid) The code below shows the player (from the goal) and stadium name (from the game table) for every goal scored. Modify it to show the player, teamid, stadium and mdate for every German goal. 12SELECT player, teamid, stadium, mdate FROM game JOIN goal ON (id=matchid) where teamid=&apos;GER&apos; 4). Use the same JOIN as in the previous question. Show the team1, team2 and player for every goal scored by a player called Mario player LIKE &apos;Mario%&apos; 123SELECT team1, team2, player FROM gameJOIN goal ON id=matchidWHERE player LIKE &apos;Mario%&apos; 5). The table eteam gives details of every national team including the coach. You can JOIN goal to eteamusing the phrase goal JOIN eteam on teamid=id Show player, teamid, coach, gtime for all goals scored in the first 10 minutes gtime&lt;=10 123SELECT player, teamid, coach, gtime FROM goal join eteam on teamid=id WHERE gtime&lt;=10 6). To JOIN game with eteam you could use eithergame JOIN eteam ON (team1=eteam.id) or game JOIN eteam ON (team2=eteam.id) Notice that because id is a column name in both game and eteam you must specify eteam.id instead of just id List the the dates of the matches and the name of the team in which ‘Fernando Santos’ was the team1 coach. 123SELECT mdate, teamname FROM gameJOIN eteam ON team1 = eteam.idWHERE coach = &apos;Fernando Santos&apos; 7). List the player for every goal scored in a game where the stadium was ‘National Stadium, Warsaw’ 123SELECT player FROM goalJOIN game ON matchid = idWHERE stadium = &apos;National Stadium, Warsaw&apos; More difficult questions8). The example query shows all goals scored in the Germany-Greece quarterfinal. Instead show the name of all players who scored a goal against Germany. 123SELECT DISTINCT player FROM game JOIN goal ON matchid = id WHERE (team1=&apos;GER&apos; or team2=&apos;GER&apos;) and teamid != &apos;GER&apos; 9). Show teamname and the total number of goals scored. COUNT and GROUP BY You should COUNT(*) in the SELECT line and GROUP BY teamname 123SELECT teamname, COUNT(teamid) FROM eteam JOIN goal ON id=teamidGROUP BY teamname 10). Show the stadium and the number of goals scored in each stadium. 123SELECT stadium, COUNT(teamid) FROM game JOIN goal ON id = matchidGROUP BY stadium 11). For every match involving ‘POL’, show the matchid, date and the number of goals scored. 1234SELECT matchid, mdate, COUNT(teamid) FROM game JOIN goal ON matchid = id WHERE (team1 = &apos;POL&apos; OR team2 = &apos;POL&apos;)GROUP BY matchid, mdate 12). For every match where ‘GER’ scored, show matchid, match date and the number of goals scored by ‘GER’ 1234SELECT matchid, mdate, COUNT(teamid) FROM gameJOIN goal ON id = matchidWHERE teamid = &apos;GER&apos;GROUP BY matchid, mdate 13). List every match with the goals scored by each team as shown. This will use “CASE WHEN“ which has not been explained in any previous exercises. mdate team1 score1 team2 score2 1 July 2012 ESP 4 ITA 0 10 June 2012 ESP 1 ITA 1 10 June 2012 IRL 1 CRO 3 … Notice in the query given every goal is listed. If it was a team1 goal then a 1 appears in score1, otherwise there is a 0. You could SUM this column to get a count of the goals scored by team1. Sort your result by mdate, matchid, team1 and team2. 1234567SELECT mdate, team1, SUM(CASE WHEN teamid=team1 THEN 1 ELSE 0 END) AS score1, team2, SUM(CASE WHEN teamid=team2 THEN 1 ELSE 0 END) AS score2 FROM game left JOIN goal ON matchid = idGROUP BY mdate, team1, team2ORDER BY mdate, matchid, team1, team2","link":"/2018/08/17/2018-08-18-JOIN/"},{"title":"SUM and COUNT","text":"SUM and COUNThttps://sqlzoo.net/wiki/SUM_and_COUNTWorld Country Profile: Aggregate functionsThis tutorial is about aggregate functions such as COUNT, SUM and AVG. An aggregate function takes many values and delivers just one value. For example the function SUM would aggregate the values 2, 4 and 5 to deliver the single value 11. name continent area population gdp Afghanistan Asia 652230 25500100 20343000000 Albania Europe 28748 2831741 12960000000 Algeria Africa 2381741 37100000 188681000000 Andorra Europe 468 78115 3712000000 Angola Africa 1246700 20609294 100990000000 … 1). Show the total population of the world. 1world(name, continent, area, population, gdp) 12SELECT SUM(population)FROM world 2). List all the continents - just once each. 1SELECT DISTINCT continent FROM world 3). Give the total GDP of Africa 12SELECT SUM(gdp) FROM world GROUP BY continentHAVING continent = &apos;Africa&apos; 4). How many countries have an area of at least 1000000 1SELECT COUNT(name) FROM world WHERE area &gt;= 1000000 5). What is the total population of (‘Estonia’, ‘Latvia’, ‘Lithuania’) 12SELECT SUM(population) FROM worldWHERE name IN (&apos;Estonia&apos;, &apos;Latvia&apos;, &apos;Lithuania&apos;) Using GROUP BY and HAVING6). For each continent show the continent and number of countries. 12SELECT continent, COUNT(name) FROM worldGROUP BY continent 7). For each continent show the continent and number of countries with populations of at least 10 million. 123SELECT continent, COUNT(name) FROM worldWHERE population &gt;= 10000000GROUP BY continent 8). List the continents that have a total population of at least 100 million. 123SELECT continent FROM worldGROUP BY continentHAVING SUM(population) &gt;= 100000000","link":"/2018/08/17/2018-08-18-SUM-and-COUNT/"},{"title":"SELECT from WORLD","text":"SELECT from WORLDhttps://sqlzoo.net/wiki/SELECT_from_WORLD_TutorialIn this tutorial you will use the SELECT command on the table world: name continent area population gdp Afghanistan Asia 652230 25500100 20343000000 Albania Europe 28748 2831741 12960000000 Algeria Africa 2381741 37100000 188681000000 Andorra Europe 468 78115 3712000000 Angola Africa 1246700 20609294 100990000000 … 1). Observe the result of running this SQL command to show the name, continent and population of all countries. 1SELECT name, continent, population FROM world 2). Show the name for the countries that have a population of at least 200 million. 200 million is 200000000, there are eight zeros. 12SELECT name FROM worldWHERE population &gt;=200000000 3). Give the name and the per capita GDP for those countries with a population of at least 200 million. per capita GDP is the GDP divided by the population GDP/population 12SELECT name, gdp/population FROM worldWHERE population &gt; 200000000 4). Show the name and population in millions for the countries of the continent ‘South America’. Divide the population by 1000000 to get population in millions. 12SELECT name, population/1000000 FROM worldWHERE continent = &apos;South America&apos; 5). Show the name and population for France, Germany, Italy 12SELECT name, population FROM worldWHERE name IN (&apos;France&apos;, &apos;Germany&apos;, &apos;Italy&apos;) 6). Show the countries which have a name that includes the word ‘United’ 12SELECT name FROM worldWHERE name LIKE &apos;%United%&apos; 7). Two ways to be big: A country is big if it has an area of more than 3 million sq km or it has a population of more than 250 million. Show the countries that are big by area or big by population. Show name, population and area. 12SELECT name, population, area FROM worldWHERE area &gt; 3000000 or population &gt; 250000000 8). Exclusive OR (XOR). Show the countries that are big by area or big by population but not both. Show name, population and area. Australia has a big area but a small population, it should be included. Indonesia has a big population but a small area, it should be included. China has a big population and big area, it should be excluded. United Kingdom has a small population and a small area, it should be excluded. 12SELECT name, population, area FROM worldWHERE (area &gt; 3000000) XOR (population &gt; 250000000) 9). Show the name and population in millions and the GDP in billions for the countries of the continent‘South America’. Use the ROUND function to show the values to two decimal places. For South America show population in millions and GDP in billions both to 2 decimal places. 12SELECT name, ROUND(population/1000000, 2), ROUND(gdp/1000000000,2) FROM worldWHERE continent = &apos;South America&apos; 10). Show the name and per-capita GDP for those countries with a GDP of at least one trillion (1000000000000; that is 12 zeros). Round this value to the nearest 1000. Show per-capita GDP for the trillion dollar countries to the nearest $1000. 12SELECT name, ROUND(gdp/population,-3) FROM worldWHERE gdp &gt;= 1000000000000 11). Greece has capital Athens. Each of the strings ‘Greece’, and ‘Athens’ has 6 characters. Show the name and capital where the name and the capital have the same number of characters. You can use the LENGTH function to find the number of characters in a string 123SELECT name, capital FROM world WHERE LENGTH(name) = LENGTH(capital) 12). The capital of Sweden is Stockholm. Both words start with the letter ‘S’. Show the name and the capital where the first letters of each match. Don’t include countries where the name and the capital are the same word. You can use the function LEFT to isolate the first character. You can use &lt;&gt; as the NOT EQUALS operator. 12SELECT name, capital FROM worldWHERE LEFT(name,1) = LEFT(capital,1) and name &lt;&gt; capital 13). Equatorial Guinea and Dominican Republic have all of the vowels (a e i o u) in the name. They don’t count because they have more than one word in the name. Find the country that has all the vowels and no spaces in its name. You can use the phrase name NOT LIKE &apos;%a%&apos; to exclude characters from your results. The query shown misses countries like Bahamas and Belarus because they contain at least one ‘a’ 1234SELECT name FROM worldWHERE name LIKE &apos;%a%&apos; and name LIKE &apos;%e%&apos; and name LIKE &apos;%i%&apos; and name LIKE &apos;%o%&apos; and name LIKE &apos;%u%&apos; AND name NOT LIKE &apos;% %&apos;","link":"/2018/08/16/2018-08-17-SELECT-from-WORLD/"},{"title":"More JOIN operations","text":"More JOIN operationsThis tutorial introduces the notion of a join. The database consists of three tables movie , actor and casting . 1). List the films where the yr is 1962 [Show id, title] 123SELECT id, title FROM movie WHERE yr=1962 2). Give year of ‘Citizen Kane’. 12SELECT yr FROM movie WHERE title=&apos;Citizen Kane&apos; 3). List all of the Star Trek movies, include the id, title and yr (all of these movies include the words Star Trek in the title). Order results by year. 123SELECT id, title, yr FROM movieWHERE title LIKE &apos;%Star Trek%&apos;ORDER BY yr 4). What id number does the actor ‘Glenn Close’ have? 12SELECT id FROM actorWHERE name=&apos;Glenn Close&apos; 5). What is the id of the film ‘Casablanca’ 12SELECT id FROM movieWHERE title=&apos;Casablanca&apos; 6). Obtain the cast list for ‘Casablanca’. what is a cast list? The cast list is the names of the actors who were in the movie. Use movieid=11768, (or whatever value you got from the previous question) 1234SELECT name FROM actor JOIN casting ON actor.id= actoridJOIN movie ON movieid=movie.idWHERE title=&apos;Casablanca&apos; 7). Obtain the cast list for the film ‘Alien’ 1234SELECT name FROM actor JOIN casting ON actor.id= actoridJOIN movie ON movieid=movie.idWHERE title= &apos;Alien&apos; 8). List the films in which ‘Harrison Ford’ has appeared 1234SELECT title FROM movieJOIN casting ON movie.id= movieidJOIN actor ON actorid=actor.idWHERE name=&apos;Harrison Ford&apos; 9). List the films where ‘Harrison Ford’ has appeared - but not in the starring role. [Note: the ord field of casting gives the position of the actor. If ord=1 then this actor is in the starring role] 1234SELECT title FROM movieJOIN casting ON movie.id= movieidJOIN actor ON actorid=actor.idWHERE name=&apos;Harrison Ford&apos; AND ord!=1 10). List the films together with the leading star for all 1962 films. 1234SELECT title, name FROM movieJOIN casting ON movie.id= movieidJOIN actor ON actorid=actor.idWHERE yr=1962 AND ord=1 11). Which were the busiest years for ‘John Travolta’, show the year and the number of movies he made each year for any year in which he made more than 2 movies. 123456SELECT yr,COUNT(title) FROM movie JOIN casting ON movie.id=movieid JOIN actor ON actorid=actor.idWHERE name=&apos;John Travolta&apos;GROUP BY yrHAVING COUNT(title)&gt;2 12). List the film title and the leading actor for all of the films ‘Julie Andrews’ played in. Did you get “Little Miss Marker twice”? Julie Andrews starred in the 1980 remake of Little Miss Marker and not the original(1934). Title is not a unique field, create a table of IDs in your subquery 12345678SELECT title, name FROM movieJOIN casting ON movieid=movie.idJOIN actor ON actor.id=actoridWHERE movieid IN (SELECT movieid FROM movieJOIN casting ON movieid=movie.idJOIN actor ON actor.id=actoridWHERE name= &apos;Julie Andrews&apos;) AND ord=1 13). Obtain a list, in alphabetical order, of actors who’ve had at least 30 starring roles. 123456SELECT name FROM actorJOIN casting ON actorid=actor.idJOIN movie ON movie.id=movieidWHERE ord=1GROUP BY nameHAVING COUNT(ord)&gt;=30 14). List the films released in the year 1978 ordered by the number of actors in the cast, then by title. 123456SELECT title, COUNT(name) FROM actorJOIN casting ON actorid=actor.idJOIN movie ON movie.id=movieidWHERE yr = 1978GROUP BY titleORDER BY COUNT(name) DESC, title 15). List all the people who have worked with ‘Art Garfunkel’. 12345678SELECT name FROM actorJOIN casting ON actorid=actor.idJOIN movie ON movieid=movie.idWHERE movieid IN(SELECT movie.id FROM movieJOIN casting ON movieid=movie.idJOIN actor ON actor.id=actoridWHERE name=&apos;Art Garfunkel&apos;) AND name!=&apos;Art Garfunkel&apos;","link":"/2018/08/22/2018-08-23-More-JOIN-operations/"},{"title":"NSS Tutorial","text":"NSS Tutorialhttps://sqlzoo.net/wiki/NSS_Tutorial Field Type ukprn varchar(8) institution varchar(100) subject varchar(60) level varchar(50) question varchar(10) A_STRONGLY_DISAGREE int(11) A_DISAGREE int(11) A_NEUTRAL int(11) A_AGREE int(11) A_STRONGLY_AGREE int(11) A_NA int(11) CI_MIN int(11) score int(11) CI_MAX int(11) response int(11) sample int(11) aggregate char(1) National Student Survey 2012 The National Student Survey http://www.thestudentsurvey.com/ is presented to thousands of graduating students in UK Higher Education. The survey asks 22 questions, students can respond with STRONGLY DISAGREE, DISAGREE, NEUTRAL, AGREE or STRONGLY AGREE. The values in these columns represent PERCENTAGES of the total students who responded with that answer. The table nss has one row per institution, subject and question. 1). The example shows the number who responded for: question 1 at ‘Edinburgh Napier University’ studying ‘(8) Computer Science’ Show the the percentage who STRONGLY AGREE 12345SELECT A_STRONGLY_AGREE FROM nss WHERE question=&apos;Q01&apos; AND institution=&apos;Edinburgh Napier University&apos; AND subject=&apos;(8) Computer Science&apos; 2). Show the institution and subject where the score is at least 100 for question 15. 1234SELECT institution, subject FROM nss WHERE question=&apos;Q15&apos; AND score&gt;=100 3). Show the institution and score where the score for ‘(8) Computer Science’ is less than 50 for question ‘Q15’ 1234SELECT institution,score FROM nss WHERE question=&apos;Q15&apos;and subject=&apos;(8) Computer Science&apos;and score&lt;50 4). Show the subject and total number of students who responded to question 22 for each of the subjects ‘(8) Computer Science’ and ‘(H) Creative Arts and Design’. HINT You will need to use SUM over the response column and GROUP BY subject 12345SELECT subject, sum(response) FROM nss WHERE question=&apos;Q22&apos; AND subject in (&apos;(8) Computer Science&apos;, &apos;(H) Creative Arts and Design&apos;)GROUP BY subject 5). Show the subject and total number of students who A_STRONGLY_AGREE to question 22 for each of the subjects ‘(8) Computer Science’ and ‘(H) Creative Arts and Design’. HINT The A_STRONGLY_AGREE column is a percentage. To work out the total number of students who strongly agree you must multiply this percentage by the number who responded (response) and divide by 100 - take the SUM of that. 12345SELECT subject, sum(response* A_STRONGLY_AGREE/100) FROM nss WHERE question=&apos;Q22&apos; AND subject in (&apos;(8) Computer Science&apos;,&apos;(H) Creative Arts and Design&apos;)GROUP BY subject 6). Show the percentage of students who A_STRONGLY_AGREE to question 22 for the subject ‘(8) Computer Science’ show the same figure for the subject ‘(H) Creative Arts and Design’. Use the ROUND function to show the percentage without decimal places. 12345SELECT subject, round(sum(response*A_STRONGLY_AGREE)/sum(response)) FROM nss WHERE question=&apos;Q22&apos; AND subject in (&apos;(8) Computer Science&apos;, &apos;(H) Creative Arts and Design&apos;)GROUP BY subject 7). Show the average scores for question ‘Q22’ for each institution that include ‘Manchester’ in the name. The column score is a percentage - you must use the method outlined above to multiply the percentage by the response and divide by the total response. Give your answer rounded to the nearest whole number. 12345SELECT institution, ROUND(SUM(score*response)/SUM(response)) FROM nss WHERE question=&apos;Q22&apos; AND (institution LIKE &apos;%Manchester%&apos;)GROUP BY institution 8). Show the institution, the total sample size and the number of computing students for institutions in Manchester for ‘Q01’. 12345678SELECT institution, SUM(sample), SUM(CASE WHEN subject=&apos;(8) Computer Science&apos; THEN sample ELSE 0 END) FROM nss WHERE question=&apos;Q01&apos; AND (institution LIKE &apos;%Manchester%&apos;)GROUP BY institution","link":"/2018/08/22/2018-08-23-NSS-Tutorial/"},{"title":"二分法学习笔记","text":"最近听了九章的算法班的视频，感觉讲得很不错。刚开始从二分法讲起，他家的模板总结的很好，之前我自己在做Leetcode的时候，总是把时间浪费在一些很鸡毛蒜皮的事情上，比如 edge case的判断， 这个地方是大于号还是小于号，要加一还是减一， 诸如此类。花费了很多时间还很没有成就感，因为过几天又忘记了。听了直播后，觉得他们总结的很好，于是做个记录吧。 模板 123456789101112131415161718192021222324252627282930313233343536class Solution { public int searchInsert(int[] nums, int target) { if(nums.length &lt;=0){ return -1; } int start = 0; int end = nums.length -1; //寻找第一次出现的位置 while (start + 1 &lt; end){ int mid = start +(end-start)/2; //找到了 if(nums[mid] == target){ return mid; } if(nums[mid] &lt; target){ start = mid; } if(nums[mid] &gt; target){ end = mid; } } //没找到target,在start和end中找比target大的 //start&gt;=tartget if(nums[start] &gt;= target){ return start; } //end&gt;=tartget else if (nums[end] &gt;= target){ return end; } //nums中所有元素都比target小 else{ return end+1; } }} 一些练习 Lintcode Search In a Big Sorted Arrayhttp://www.lintcode.com/problem/search-in-a-big-sorted-array/http://www.jiuzhang.com/solutions/search-in-a-big-sorted-array/ Lintcode 140 fast power 我的代码 1234567891011121314151617class Solution: &quot;&quot;&quot; @param a: A 32bit integer @param b: A 32bit integer @param n: A 32bit integer @return: An integer &quot;&quot;&quot; def fastPower(self, a, b, n): # write your code here if n == 0: return 1 % b return self.helper(a, b, n) % b def helper(self, a, b, n): if n == 1: return a % b elif n % 2 == 0: return (self.helper(a, b, n / 2) ** 2) % b else: return (self.helper(a, b, (n - 1) / 2) ** 2 * (a % b)) % b Your submission beats 31.60% Submissions! Lintcode 429 pow(x, n) 我的代码 12345678910111213141516171819class Solution: &quot;&quot;&quot; @param x {float}: the base number @param n {int}: the power number @return {float}: the result &quot;&quot;&quot; def myPow(self, x, n): # write your code here if n == 0: return 1 if n &gt; 0: return self.positivePow(x, n) else: return self.positivePow(1.0 / x, -n) def positivePow(self, x, n): if n == 0: return 1 if n == 1: return x elif n % 2 == 0: return self.myPow(x, n / 2) ** 2 else: return (self.myPow(x, (n - 1) / 2) ** 2) * x Your submission beats 63.40% Submissions! Lintcode 437 copy books LeetCode 29. Divide Two Integers LeetCode 69 Sqrt(x): 1. 暴力解法 while循环， 时间复杂度 $O(\\sqrt{N})$; 2. binary search， 时间复杂度 $O(\\log{N})$ 暴力解法 123456class Solution: def mySqrt(self, x: int) -&gt; int: i = 1 while i * i &lt;= x: i += 1 return i - 1 Runtime: 2008 ms, faster than 9.80% of Python3 online submissions for Sqrt(x). Memory Usage: 12.9 MB, less than 100.00% of Python3 online submissions for Sqrt(x). 二分法 1234567891011class Solution: def mySqrt(self, x: int) -&gt; int: l, r = 1, x while l + 1 &lt; r: m = (l + r) // 2 if m * m &gt; x: r = m else: l = m if l * l &lt;= x: return l return r Runtime: 36 ms, faster than 55.03% of Python3 online submissions for Sqrt(x). Memory Usage: 12.8 MB, less than 100.00% of Python3 online submissions for Sqrt(x). LeetCode 33. Search in Rotated Sorted Array LeetCode 81. Search in Rotated Sorted Array II 我的代码, 2020/03/22 去重：与LeetCode 33不同的是增加了如下代码 1234if nums[l] == nums[m] and nums[m] == nums[r]: l += 1 r -= 1 continue 12345678910111213141516171819202122232425class Solution: def search(self, nums: List[int], target: int) -&gt; bool: if len(nums) == 0: return False l, r = 0, len(nums) - 1 while l + 1 &lt; r: m = (l + r) // 2 if nums[m] == target: return True if nums[l] == nums[m] and nums[m] == nums[r]: l += 1 r -= 1 continue elif nums[m] &gt; nums[r]: if nums[l] &lt;= target &lt; nums[m]: r = m else: l = m else: if nums[m] &lt; target &lt;= nums[r]: l = m else: r = m if nums[l] == target: return True if nums[r] == target: return True return False Runtime: 56 ms, faster than 40.15% of Python3 online submissions for Search in Rotated Sorted Array II. Memory Usage: 13.3 MB, less than 82.86% of Python3 online submissions for Search in Rotated Sorted Array II. 300. Longest Increasing Subsequence dynamic programming, time: $O(N^2)$,2020/03/22 要点：dp[i] 表示以当前位置为tail的最长增长序列的长度，所以每当update dp[i] 的时候要和所有小于指标i的数组元素做比较。 1234567891011class Solution: def lengthOfLIS(self, nums: List[int]) -&gt; int: if len(nums) == 0: return 0 dp = [1] * len(nums) res = 1 for i in range(1, len(nums)): for j in range(i): if nums[i] &gt; nums[j]: dp[i] = max(dp[i], 1 + dp[j]) res = max(res, dp[i]) return res Runtime: 1232 ms, faster than 23.23% of Python3 online submissions for Longest Increasing Subsequence. Memory Usage: 13.2 MB, less than 79.49% of Python3 online submissions for Longest Increasing Subsequence. 二分查找法, time: $O(N\\log{N})$,2020/03/22 网上的思路：先建立一个数组dummy，把首元素放进去，然后比较之后的元素，如果遍历到的新元素比 ends 数组中的首元素小的话，替换首元素为此新元素，如果遍历到的新元素比 dummy数组中的末尾元素还大的话，将此新元素添加到 dummy数组末尾(注意不覆盖原末尾元素)。如果遍历到的新元素比 dummy数组首元素大，比尾元素小时，此时用二分查找法找到第一个不小于此新元素的位置，覆盖掉位置的原来的数字，以此类推直至遍历完整个 nums 数组，此时 dummy 数组的长度就是要求的LIS的长度. 123456789101112131415161718192021222324class Solution: def lengthOfLIS(self, nums: List[int]) -&gt; int: if len(nums) == 0: return 0 dummy = [nums[0]] for i in range(1, len(nums)): if nums[i] == dummy[0] or nums[i] == dummy[-1]: continue if nums[i] &gt; dummy[-1]: dummy.append(nums[i]) elif nums[i] &lt; dummy[0]: dummy[0] = nums[i] else: k = self.search(dummy, nums[i]) dummy[k] = nums[i] return len(dummy) def search(self, dummy, target): # find the first element no less than target l, r = 0, len(dummy) - 1 while l + 1 &lt; r: m = (l + r) // 2 if dummy[m] &gt;= target: r = m else: l = m if dummy[r] &gt;= target: return r if dummy[l] &gt;= target: return l Runtime: 40 ms, faster than 88.16% of Python3 online submissions for Longest Increasing Subsequence. Memory Usage: 13.2 MB, less than 69.23% of Python3 online submissions for Longest Increasing Subsequence. LeetCode 209. Minimum Size Subarray Sum sliding window， 时间复杂度 $O(N)$ , 2020/03/22 123456789101112class Solution: def minSubArrayLen(self, s: int, nums: List[int]) -&gt; int: # sliding window approach l, sum_wind= 0, 0 res = len(nums) + 1 # record the size of window for r, num in enumerate(nums): sum_wind += num while sum_wind &gt;= s: # keep pop-up left element from the window res = min(res, r - l + 1) sum_wind -= nums[l] l += 1 return res if res &lt;= len(nums) else 0 Runtime: 76 ms, faster than 69.59% of Python3 online submissions for Minimum Size Subarray Sum. Memory Usage: 15.4 MB, less than 7.69% of Python3 online submissions for Minimum Size Subarray Sum. 二分法 with time $O(N\\log{N})$ idea: Since all elements are positive, the cumulative sum must be strictly increasing. Then, a subarray sum can expressed as the difference between two cumulative sum. Hence, given a start index for the cumulative sum array, the other end index can be searched using binary search. 123456789101112131415161718192021222324252627class Solution: def minSubArrayLen(self, s: int, nums: List[int]) -&gt; int: # calculate the cumulative sum cum_sum = [0] * (len(nums) + 1) for i in range(1, len(nums) + 1): cum_sum[i] = nums[i - 1] cum_sum[i] += cum_sum[i - 1] res = len(cum_sum) + 1 for l in range(len(cum_sum)): r = self.find_right(cum_sum, l, s) res = min(res, r - l) return res if res &lt;= len(cum_sum) else 0 def find_right(self, nums, i, target): l, r = i, len(nums) - 1 while l + 1 &lt; r: m = (l + r) // 2 if nums[m] - nums[i] &gt;= target: r = m else: l = m if nums[r] - nums[i] &gt;= target: return r elif nums[l] - nums[i] &gt;= target: return l else: return float(&quot;inf&quot;) LeetCode 702.Search in a Sorted Array of Unknown Size LeetCode 1060. Missing Element in Sorted Array 二分法, 2020/03/22 思路：1. 二分之后要确定missing的数是在前半段还是后半段；2. 两个数列元素之间missing的数的个数的计算。这些比较琐碎的事花了不少时间，但是整体思路其实很简单。 12345678910111213141516class Solution: def missingElement(self, nums: List[int], k: int) -&gt; int: l, r = 0, len(nums) - 1 while l + 1 &lt; r: m = (l + r) // 2 left_gap = (nums[m] - nums[l]) - (m - l) if k &gt; left_gap: l = m k -= left_gap else: r = m gap = (nums[r] - nums[l]) - (r - l) if k &lt;= gap: return nums[l] + k else: return nums[r] + k - gap Runtime: 316 ms, faster than 54.94% of Python3 online submissions for Missing Element in Sorted Array. Memory Usage: 19.2 MB, less than 100.00% of Python3 online submissions for Missing Element in Sorted Array.","link":"/2020/03/20/%E4%BA%8C%E5%88%86%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"title":"LeeCode53. Maximum Subarray","text":"DescriptionGiven an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Example: 123Input: [-2,1,-3,4,-1,2,1,-5,4],Output: 6Explanation: [4,-1,2,1] has the largest sum = 6. Follow up: If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle. Python 3 Solution:Algorithm12345class Solution: def maxSubArray(self, nums): for i in range(1,len(nums)): nums[i]=max(nums[i],nums[i]+nums[i-1]) return max(nums) The simplest way to deal with this problem is trying to search over all possible sub lists and return the one with highest sum. However, the running time could easily exceed the limit when the list is extremely long. The above pretty solution was found online. It uses the so called dynamic programming method to solve a complex problem by breaking it down into a collection of sub problems and keeping tracking of the best solution. The latter is similar to the recursion idea in some sense.","link":"/2018/05/15/2018-05-16-53.-Maximum-Subarray/"},{"title":"Copy Books","text":"二分法练习 非原创解法 Descriptionhttps://www.lintcode.com/problem/copy-books/ 解法链接：https://blog.csdn.net/roufoo/article/details/87579774 这道题最快的解法是：Greedy + Binary Search首先我们思考这样一个问题: 如果给定N本书，我们限定时间不超过T，所需最少的抄写员是多少? 这个问题可以用贪婪法。因为题目规定了，同一本书只能由一个人编辑，并且只是连续编辑多本书。所以，我们让第一个人从第一本书开始抄，一直抄到时间超过T的时候某本书(假设为第x本书)还没抄完，则第1个人就只能抄到第x-1本书，第x本书则由第2个人负责抄，一直到他抄到某本书又超时了为止。如此循环下去，直到所有书都抄完为止，所需要人数即为所需最少抄写员。 现在我们就可以试不同的T，看所需最少抄写员是不是超过了k。从两个方向看： 假设T等于1个人抄完所有书所需时间，那所需最少抄写员就是1。如果1&lt;k，说明T取太大了，要把T减小。 假设T是最厚的那本书由1个人抄完所需时间，那所需最少抄写员就是N。如果N&gt;k，说明T取太小了，要把T变大。这个思路告诉我们可以用Binary Search来解决这个问题。—–&gt; 这句话说的不对 1)和2)分别给出了T的上下限，如果给定T所需人数&lt;k，则T要变小，如果所需人数&gt;k, 则T要变大。若所需人数=k, 说明此T可以，但还可以试试能不能把T变小。checkValid()就是判断N本书，&lt;=T时间, k个人能不能搞定。 注意：题目问“What’s the best strategy to assign books so that the slowest copier can finish at earliest time?” 这是一个典型的最大值最小化问题。通常这类问题要先考虑用Binary Search。 我的代码 1234567891011121314151617181920212223242526272829303132class Solution: &quot;&quot;&quot; @param pages: an array of integers @param k: An integer @return: an integer &quot;&quot;&quot; def copyBooks(self, pages, k): # write your code here max_page, sum_page = 0, 0 for page in pages: sum_page += page max_page = max(max_page, page) l, r = max_page, sum_page while l + 1 &lt; r: m = (l + r) // 2 if self.check_valid(pages, m, k): r = m else: l = m if self.check_valid(pages, l, k): return l return r def check_valid(self, pages, limit, k): count, curr_page = 1, 0 for page in pages: if page &gt; limit: return False if curr_page + page &gt; limit: count += 1 curr_page = page else: curr_page += page return count &lt;= k Your submission beats 89.40% Submissions!","link":"/2020/03/21/2020-03-22-Copy-Books/"}],"tags":[{"name":"Ensemble","slug":"Ensemble","link":"/tags/Ensemble/"},{"name":"Decision Tree","slug":"Decision-Tree","link":"/tags/Decision-Tree/"},{"name":"Stochastic Gradient","slug":"Stochastic-Gradient","link":"/tags/Stochastic-Gradient/"},{"name":"Calculus","slug":"Calculus","link":"/tags/Calculus/"},{"name":"K-means","slug":"K-means","link":"/tags/K-means/"},{"name":"REPLACE","slug":"REPLACE","link":"/tags/REPLACE/"},{"name":"CONCAT","slug":"CONCAT","link":"/tags/CONCAT/"},{"name":"Non-ASCII characters","slug":"Non-ASCII-characters","link":"/tags/Non-ASCII-characters/"},{"name":"SINGLE QUOTES","slug":"SINGLE-QUOTES","link":"/tags/SINGLE-QUOTES/"},{"name":"ALL OVER A LIST","slug":"ALL-OVER-A-LIST","link":"/tags/ALL-OVER-A-LIST/"},{"name":"JOIN","slug":"JOIN","link":"/tags/JOIN/"},{"name":"HAVING AND GROUP BY","slug":"HAVING-AND-GROUP-BY","link":"/tags/HAVING-AND-GROUP-BY/"},{"name":"DISTINCT","slug":"DISTINCT","link":"/tags/DISTINCT/"},{"name":"SUM, COUNT","slug":"SUM-COUNT","link":"/tags/SUM-COUNT/"},{"name":"ROUND","slug":"ROUND","link":"/tags/ROUND/"},{"name":"LENGTH","slug":"LENGTH","link":"/tags/LENGTH/"},{"name":"LEFT","slug":"LEFT","link":"/tags/LEFT/"},{"name":"心得","slug":"心得","link":"/tags/%E5%BF%83%E5%BE%97/"}],"categories":[{"name":"Algorithm","slug":"Algorithm","link":"/categories/Algorithm/"},{"name":"Math","slug":"Algorithm/Math","link":"/categories/Algorithm/Math/"},{"name":"SQL","slug":"SQL","link":"/categories/SQL/"},{"name":"LeetCode","slug":"LeetCode","link":"/categories/LeetCode/"},{"name":"Lintcode","slug":"Lintcode","link":"/categories/Lintcode/"}]}